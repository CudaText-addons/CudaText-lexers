object SyntAnal2: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = 'Id'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Number'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Dim'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Operator'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = 213
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Var'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGreen
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Macro'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = 31993
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Keyword'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlue
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Preprocessor'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clOlive
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end>
  TokenRules = <
    item
      DisplayName = 'Comment block 1'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '(?s)\#comments\-start\b.*?\#comments-end\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Comment block 2'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '(?s)\#cs\b.*?\#ce\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Rgn start'
      StyleName = 'Preprocessor'
      TokenType = 10
      Expression = '\#region\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Rng end'
      StyleName = 'Preprocessor'
      TokenType = 11
      Expression = '\#endregion\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Preprocessor'
      StyleName = 'Preprocessor'
      TokenType = 12
      Expression = 
        '\#(include(\-once)?|region|endRegion|OnAutoItStartRegister|notra' +
        'yicon|requireadmin|force[dr]ef|ignorefunc|pragma|AutoIt3Wrapper_' +
        '\w+|Au3stripper_\w+|tidy_parameters|tidy_ILC_pos)\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Comment ;'
      StyleName = 'Comment'
      TokenType = 1
      Expression = ';.*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'One_liner_then'
      StyleName = 'Keyword'
      TokenType = 6
      Expression = '(?i)then\b(?=[\x20\x09]+[^\s;])'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id'
      StyleName = 'Id'
      Expression = '[a-z_]\w*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Float'
      StyleName = 'Number'
      TokenType = 2
      Expression = '(\d+\.)?\d+e[\+\-]?\d+|'#13#10'\d+\.\d+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Integer'
      StyleName = 'Number'
      TokenType = 2
      Expression = '0x\h+|\d+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Operator'
      StyleName = 'Operator'
      TokenType = 3
      Expression = '[!/\+\-\*:=<>&/\|\^~]'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol'
      StyleName = 'Symbol'
      TokenType = 3
      Expression = '[\{\}\(\)\[\],;\.]'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String'
      StyleName = 'String'
      TokenType = 4
      Expression = '(?s)(["'#39'])(\1\1|.)*?(\1|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Variable'
      StyleName = 'Var'
      TokenType = 5
      Expression = '\$\w+'#13#10
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Macro'
      StyleName = 'Macro'
      TokenType = 7
      Expression = '@[a-z_]\w*'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'Keywords'
      StyleName = 'Keyword'
      AlwaysEnabled = True
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'And'
            'ByRef'
            'Case'
            'ContinueCase'
            'ContinueLoop'
            'Default'
            'Do'
            'Else'
            'ElseIf'
            'EndFunc'
            'EndIf'
            'EndSelect'
            'EndSwitch'
            'EndWith'
            'Enum'
            'Exit'
            'ExitLoop'
            'False'
            'For'
            'Func'
            'If'
            'In'
            'Next'
            'Not'
            'Null'
            'Or'
            'Return'
            'Select'
            'Static'
            'Step'
            'Switch'
            'Then'
            'To'
            'True'
            'Until'
            'Volatile'
            'WEnd'
            'While'
            'With')
          TokenTypes = 1
          IgnoreCase = True
        end>
      HighlightPos = cpBound
      TreeItemImage = 1
      TreeGroupImage = 1
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Keywords dim'
      StyleName = 'Dim'
      AlwaysEnabled = True
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'const'
            'dim'
            'global'
            'local'
            'redim')
          TokenTypes = 1
          IgnoreCase = True
        end>
      DynHighlight = dhRange
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '_Func'
      ConditionList = <
        item
          TagList.Strings = (
            'Func')
          TokenTypes = 1
          IgnoreCase = True
        end>
      BlockEnd = '_EndFunc'
      NameFmt = '%s0 %s-1'
      HighlightPos = cpAny
      DynSelectMin = True
      CollapseFmt = '%s0 %s-1'
      TreeItemImage = 5
      IgnoreAsParent = False
    end
    item
      DisplayName = '_EndFunc'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            'EndFunc')
          TokenTypes = 1
          IgnoreCase = True
        end>
      BlockEnd = '_Func'
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '_If'
      ConditionList = <
        item
          TagList.Strings = (
            'if')
          TokenTypes = 1
          IgnoreCase = True
        end>
      DisplayInTree = False
      NameFmt = '%s0 %s-1 %s-2 %s-3 %s-4'
      HighlightPos = cpAny
      DrawStaple = True
      CollapseFmt = '%s0 %s-1 %s-2 %s-3 %s-4'
      IgnoreAsParent = False
    end
    item
      DisplayName = '_EndIf'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            'EndIf')
          TokenTypes = 1
          IgnoreCase = True
        end>
      BlockEnd = '_If'
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '_EndIf_OneLiner'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TokenTypes = 64
        end>
      BlockEnd = '_If'
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '_Select'
      ConditionList = <
        item
          TagList.Strings = (
            'Select')
          TokenTypes = 1
          IgnoreCase = True
        end>
      BlockEnd = '_EndSelect'
      DisplayInTree = False
      NameFmt = '%s0 %s-1 %s-2 %s-3 %s-4'
      HighlightPos = cpAny
      DrawStaple = True
      CollapseFmt = '%s0 %s-1 %s-2 %s-3 %s-4'
      IgnoreAsParent = False
    end
    item
      DisplayName = '_EndSelect'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            'EndSelect')
          TokenTypes = 1
          IgnoreCase = True
        end>
      BlockEnd = '_Select'
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '_Switch'
      ConditionList = <
        item
          TagList.Strings = (
            'Switch')
          TokenTypes = 1
          IgnoreCase = True
        end>
      BlockEnd = '_EndSwitch'
      DisplayInTree = False
      NameFmt = '%s0 %s-1 %s-2 %s-3 %s-4'
      HighlightPos = cpAny
      DrawStaple = True
      CollapseFmt = '%s0 %s-1 %s-2 %s-3 %s-4'
      IgnoreAsParent = False
    end
    item
      DisplayName = '_EndSwitch'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            'EndSwitch')
          TokenTypes = 1
          IgnoreCase = True
        end>
      BlockEnd = '_Switch'
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '_For'
      ConditionList = <
        item
          TagList.Strings = (
            'For')
          TokenTypes = 1
          IgnoreCase = True
        end>
      BlockEnd = '_Next'
      DisplayInTree = False
      NameFmt = '%s0 %s-1 %s-2 %s-3 %s-4'
      HighlightPos = cpAny
      DrawStaple = True
      CollapseFmt = '%s0 %s-1 %s-2 %s-3 %s-4'
      IgnoreAsParent = False
    end
    item
      DisplayName = '_Next'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            'Next')
          TokenTypes = 1
          IgnoreCase = True
        end>
      BlockEnd = '_For'
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '_While'
      ConditionList = <
        item
          TagList.Strings = (
            'While')
          TokenTypes = 1
          IgnoreCase = True
        end>
      BlockEnd = '_WEnd'
      EndOfTextClose = True
      DisplayInTree = False
      NameFmt = '%s0 %s-1 %s-2 %s-3 %s-4'
      DynHighlight = dhRange
      HighlightPos = cpAny
      DrawStaple = True
      CollapseFmt = '%s0 %s-1 %s-2 %s-3 %s-4'
      IgnoreAsParent = False
    end
    item
      DisplayName = '_WEnd'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            'WEnd')
          TokenTypes = 1
          IgnoreCase = True
        end>
      BlockEnd = '_While'
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '_Do'
      ConditionList = <
        item
          TagList.Strings = (
            'Do')
          TokenTypes = 1
          IgnoreCase = True
        end>
      BlockEnd = '_Until'
      DisplayInTree = False
      NameFmt = '%s0 %s-1 %s-2 %s-3 %s-4'
      HighlightPos = cpAny
      DrawStaple = True
      CollapseFmt = '%s0 %s-1 %s-2 %s-3 %s-4'
      IgnoreAsParent = False
    end
    item
      DisplayName = '_Until'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            'Until')
          TokenTypes = 1
          IgnoreCase = True
        end>
      BlockEnd = '_Do'
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = '_With'
      ConditionList = <
        item
          TagList.Strings = (
            'With')
          TokenTypes = 1
          IgnoreCase = True
        end>
      BlockEnd = '_Endwith'
      DisplayInTree = False
      NameFmt = '%s0 %s-1 %s-2 %s-3 %s-4'
      HighlightPos = cpAny
      DrawStaple = True
      CollapseFmt = '%s0 %s-1 %s-2 %s-3 %s-4'
      IgnoreAsParent = False
    end
    item
      DisplayName = '_Endwith'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            'Endwith')
          TokenTypes = 1
          IgnoreCase = True
        end>
      BlockEnd = '_With'
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'region'
      ConditionList = <
        item
          TokenTypes = 1024
        end>
      BlockEnd = 'region end'
      DisplayInTree = False
      HighlightPos = cpAny
      DrawStaple = True
      IgnoreAsParent = False
    end
    item
      DisplayName = 'region end'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TokenTypes = 2048
        end>
      BlockEnd = 'region'
      HighlightPos = cpAny
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    'dim $t[3][2] = [["test;1;2;3", 123], _'
    '    ['#39';'#39', Asc('#39';'#39')], _ ; This comment'
    '    ["", 0]]           ; comment'
    ''
    ' #region'#9#9'Begin region '
    #9';'#9'#endregion'
    #9'If @error Then'
    #9#9'If @error = 2 Then $iMinIndex = $i'
    #9'Else'
    #9#9'Exit'
    #9'EndIf '
    ' #endregion'#9'End region'
    ''
    '#comments-start test'
    '  If SetIcon ($btnIcon, $sModulesPath & "\") Then _'
    #9'$bIsDefaultIcon = True'
    'end #comments-end test'
    ''
    '#include'
    '#include-once'
    '#NoTrayIcon'
    '#RequireAdmin'
    ''
    'Func Test()'
    '  While $zzz <= 2'
    '    While $xxx <= 5'
    '      $yyy = 0'
    '      While $yyy <= 5'
    '        $PalitraColor = "0x"&$ColorArray[$zzz]'
    '        GUICtrlSetBkColor ( -1, $PalitraColor)'
    '      WEnd'
    '    WEnd'
    '  Wend'
    'EndFunc')
  TokenTypeNames.Strings = (
    'Id'
    'Comment'
    'Number'
    'Symbol'
    'String'
    'Variable'
    'OneLinerThen'
    'Macro'
    'CommentStart'
    'CommentEnd'
    'RegionStart'
    'RegionEnd'
    'Preprocessor')
  Extentions = 'au3'
  LexerName = 'AutoIt'
  Notes.Strings = (
    'Original by: 480499497, http://forum.wincmd.ru'
    'Reworked: Alexey Torgashin (CudaText)')
  LineComment = ';'
  Charset = DEFAULT_CHARSET
end
